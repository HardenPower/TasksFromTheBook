package ru.vsu.but.project.SimpleShipBattleProgram;import java.io.*;import java.util.*;public class GameHelper {    private static final String alphabet = "abcdefg";    private int gridLength = 7;    private int gridSize = 49;    private int [] grid = new int[gridSize];    private int comCount = 0;    public String getUserInput(String promt) {        String inputLine = null;        System.out.println(promt + " ");        try {            BufferedReader is = new BufferedReader(new InputStreamReader(System.in));            inputLine = is.readLine();            if (inputLine.length() == 0) return null;        } catch (IOException error) {            System.out.println("IOException: " + error);        }        return inputLine.toLowerCase();    }    public ArrayList<String> placeDotCom(int comSize) {        ArrayList<String> alphaCells = new ArrayList<String>();        String[] alphacoords = new String[comSize]; //хранит координаты типа f6        String temp = null;//временная строка для конкатенации        int[] coords = new int[comSize]; //координаты текущего сайта        int attemps = 0; //счетчик текущих попыток        boolean success = false; // нашли подходящее местоположение?        int location = 0; //  текущее начальное положение        comCount++; // Энный сайт для размещения        int incr = 1; // устанавливаем горизонтальный инкремент        if ((comCount % 2) == 1) { //если нечетный(размещаем вертикально)            incr = gridLength; //устанавливаем вертикальный инкремент        }        while (!success & attemps++ < 200) { //главный поисковой цикл (32)            location = (int) (Math.random() * gridSize); //получаем случайную стартовую точку            //System.out.print("пробуем" + location);            int x = 0; // энная позиция в сайте, кот нужно разместить            success = true; // предполагаемый успешный код            while (success && x < comSize) { // ищем соседнюю неиспользованную ячейку                if (grid[location] == 0) { // если еще не используется                    coords[x++] = location; // сохраняем местоположение                    location += incr; // пробуем следующую соседнюю точку                    if (location >= gridSize) { // // вышлы за рамки – низ                        success = false; // неудача                    }                    if (x > 0 && (location % gridLength == 0)) { // вышлы за рамки – правый край                        success = false; // неудача                    }                } else {        // нашли уже используещееся местопожение                    //System.out.print("используется" + location);                    success = false; // неудача                }            }        }        //переводим местоположение в символьные координаты        int x = 0;        int row = 0;        int column = 0;        //System.out.println("/n");        while (x < comSize) {            grid[coords[x]] = 1; // помечаем ячейки на главной сетке как использованные            row = (int) (coords[x] / gridLength); //получаем значение строки            column = coords[x] % gridLength;////получаем числовое значение столбца            temp = String.valueOf(alphabet.charAt(column));// преобразуем его в строковый символ            alphaCells.add(temp.concat(Integer.toString(row)));            x++;            //говорит нам о том, где находтся сайт           // System.out.print(" coord " + x + " =" + alphaCells.get(x - 1));        }        //System.out.println("/n");        return alphaCells;    }}