package ru.vsu.but.project.SimpleShipBattleProgram;import java.util.ArrayList;public class DotComBust {        private GameHelper helper = new GameHelper(); //спец класс для приема пользовательского ввода        private ArrayList<DotCom> dotComList = new ArrayList<DotCom>();        private int numOfGuesses = 0; //хранит кол-во ходов пользователя        public void setUpGame() {            //создадим 3 сайта            DotCom one = new DotCom();            one.setName("google.ru");            DotCom two = new DotCom();            two.setName("yandex.ru");            DotCom three = new DotCom();            three.setName("habrahabr.ru");            dotComList.add(one);            dotComList.add(two);            dotComList.add(three);            System.out.println("Ваша цель – потопить три 'сайта'.");            System.out.println("google.ru, yandex.ru, habrahabr.ru");            System.out.println("Попытайтесь потопить их за минимальное количество ходов");            //Повторяем это с каждым объектом DotCom массива dotComList            for (DotCom dotComToSet : dotComList) {                //вызываем метод, чтобы получить случ выбранное местополож. сайта(три ячейки 7х7)                ArrayList<String> newLocation = helper.placeDotCom(3);                //устанавливаем местоположение для каждого сайта исходя из рез-та метода placeDotCom                dotComToSet.setLocationCells(newLocation);            }        }        private void startPlaying() {            //до тех пор пока список объектов не будет пустым            while (!dotComList.isEmpty()) {                //получаем пользоват. ввод , вызвав метод getUserInput                String userGuess = helper.getUserInput("Сделайте ход");                //оцениваем ход пользователя с помощью метода checkUserGuess                checkUserGuess(userGuess);            }            finishGame();        }        //Выясняем было ли попадание в один из сайтов(или потопление_        private void checkUserGuess(String userGuess) {            numOfGuesses++;            String result = "Мимо";            //повторяем ход пользователя - по умолчанию он промахнулся            //повторяем это с каждым объектом DotCom в массиве dotComList            for (DotCom dotComToTest : dotComList) {                //оцениваем ход пользователя вызывая метод checkYourself                result = dotComToTest.checkYourself(userGuess);                if (result.equals("Попал")) {                    break;                }                //удаляем объект DotCom из dotComList, если потопил                if (result.equals("Потопил")) {                    dotComList.remove(dotComToTest);                    break;                }            }            System.out.println(result);        }        public void finishGame() {            System.out.println("Все сайты ушли ко дну ");            if (numOfGuesses <=18) {                System.out.println("Это заняло у вас всего " + numOfGuesses + " попыток.");                System.out.println("Вы успели выбраться до того, как ваши вложения утонули");            } else {                System.out.println("Это заняло довольно много времени" + numOfGuesses + " попоток");                System.out.println("В след игре бейте точнее. ЫЫЫЫ");            }        }    public static void main(String[] args) {            DotComBust game = new DotComBust(); //создали игровой объект            game.setUpGame();  //говорим игровому объекту подготовить игру            game.startPlaying(); // игровой объект начинает главный игровой цикл            //продолжает спрашивать ввод игрока и проверять полученные данные    }}